import { request } from '../../utils/request/index';
import { API } from "../../config/cgi-config";
import { orderStatus } from "../../utils/request/common";
const app = getApp();
let payState;
Page({
    data: {
        loading: 1,
        currentTab: 0,
        list: [],
        swiperHeight: '',
        normalUrl: '',
        isHasData: false,
        orderMsg: ''
    },
    loadMsg(type) {
        wx.showLoading({
            title: '加载中'
        });
        let _this = this;
        if (type === 0) {
            payState = 1;
        }
        else if (type === 1) {
            payState = 0;
        }
        else {
            payState = 2;
        }
        const data = {
            id: app.globalData.userInfo.id,
            type: payState,
            page: 1,
            limit: 10,
        };
        request({
            url: API.getOrder,
            data: data,
        }).then((res) => {
            wx.hideLoading();
            if (res.data.course.length === 0) {
                _this.setData({
                    loading: 0
                });
            }
            else {
                _this.setData({
                    list: res.data.course,
                    loading: 2
                });
                let query = wx.createSelectorQuery();
                query.select('#list' + _this.data.currentTab).boundingClientRect(() => { });
                query.selectViewport().scrollOffset(() => { });
                query.exec(function (res) {
                    _this.setData({
                        swiperHeight: (res[0].height + 20) * _this.data.list.length
                    });
                });
            }
        });
    },
    go_index() {
        if (this.data.currentTab == 0) {
            wx.switchTab({
                url: '../index/index'
            });
        }
    },
    cancelPay(e) {
        let id = e.target.dataset.id;
        let _this = this;
        request({
            url: API.cancelOrder,
            data: { id }
        }).then((res) => {
            if (res.data.success) {
                wx.showToast({
                    title: '取消成功',
                    icon: 'success',
                    duration: 2000
                });
                _this.loadMsg(_this.data.currentTab);
            }
        }).catch(() => {
            wx.showToast({
                title: '取消失败',
                duration: 2000
            });
        });
    },
    deleteOrder(e) {
        let id = e.target.dataset.id;
        let _this = this;
        request({
            url: API.deleteOrder,
            data: { id }
        }).then((res) => {
            if (res.data.success) {
                wx.showToast({
                    title: '删除成功',
                    icon: 'success',
                    duration: 2000
                });
                _this.loadMsg(_this.data.currentTab);
            }
        }).catch(() => {
            wx.showToast({
                title: '删除失败',
                duration: 2000
            });
        });
    },
    paymentOrder(e) {
        let _this = this;
        wx.showLoading({
            title: '请稍等...',
        });
        const { courseid, outtradeno, noncestr, title, price } = e.target.dataset;
        if (app.globalData.userInfo && app.globalData.userInfo.token && app.globalData.userInfo.id && courseid) {
            orderStatus(app.globalData.userInfo.id, courseid).then((response) => {
                if (response.data.success) {
                    if (response.data.isPay == 0) {
                        request({
                            url: API.getPayMsg,
                            data: {
                                openId: app.globalData.userInfo.openId,
                                id: app.globalData.userInfo.id,
                                courseId: courseid,
                                desc: '学程教育-课程支付',
                                totalPrice: price,
                                notify_url: API.NotifyUrl,
                                isOrderPay: 1,
                                merchOrderId: outtradeno,
                                nonceStr: noncestr,
                            }
                        }).then((res) => {
                            wx.hideLoading({});
                            if (res.data.success) {
                                wx.requestPayment({
                                    timeStamp: res.data.res.timeStamp,
                                    nonceStr: res.data.res.nonceStr,
                                    package: res.data.res.package,
                                    signType: res.data.res.signType,
                                    paySign: res.data.res.paySign,
                                    success: function (resPay) {
                                        if (resPay.errMsg === 'requestPayment:ok') {
                                            _this.loadMsg(_this.data.currentTab);
                                            wx.showToast({
                                                title: '支付成功',
                                                icon: "none",
                                                duration: 2000
                                            });
                                            _this.requestPay(res.data.prepayId, res.data.outTradeNo, title, price, courseid);
                                        }
                                    },
                                    fail() {
                                        wx.showToast({
                                            title: '支付失败',
                                            icon: "none",
                                            duration: 2000
                                        });
                                    },
                                });
                            }
                        }).catch((err) => {
                            wx.hideLoading({});
                            console.log(err);
                        });
                    }
                    else {
                        wx.showToast({
                            title: '您已购买过该课程了哦~',
                            icon: "none",
                            duration: 2000
                        });
                    }
                }
            });
        }
        else {
        }
    },
    onLoad() {
        this.loadMsg(this.data.currentTab);
        this.setData({
            normalUrl: API.normalUrl
        });
    },
    swiperTab: function (e) {
        let _this = this;
        _this.setData({
            currentTab: e.detail.current
        });
        _this.loadMsg(this.data.currentTab);
    },
    clickTab(e) {
        let _this = this;
        if (_this.data.currentTab === e.target.dataset.current)
            return false;
        _this.setData({
            loading: 1,
            list: [],
        });
        this.loadMsg(parseInt(e.target.dataset.current));
        _this.setData({
            currentTab: e.target.dataset.current
        });
    },
    requestPay(prepayId, outTradeNo, title, price, courseid) {
        request({
            url: API.sendTemplate,
            data: {
                userId: app.globalData.userInfo.id,
                prepayId: prepayId,
                outTradeNo: outTradeNo,
                courseName: title,
                price: price,
                courseId: courseid,
            }
        }).then((res) => {
            console.log(res);
        });
    },
});
//# sourceMappingURL=data:application/json;base64,